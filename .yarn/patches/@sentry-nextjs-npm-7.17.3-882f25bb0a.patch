diff --git a/cjs/config/loaders/prefixLoader.js b/cjs/config/loaders/prefixLoader.js
index 4e6c4181b275fc05386a721a6ac9e566a7d42ac8..39253624ddb18f96f48bf14b08c07070459a3bf5 100644
--- a/cjs/config/loaders/prefixLoader.js
+++ b/cjs/config/loaders/prefixLoader.js
@@ -23,7 +23,7 @@ function prefixLoader( userCode) {
 
   // Fill in the placeholder
   let templateCode = fs__namespace.readFileSync(templatePath).toString();
-  templateCode = templateCode.replace('__DIST_DIR__', distDir);
+  templateCode = templateCode.replace('__DIST_DIR__', distDir.replace(/\\/g, '\\\\'));
 
   return `${templateCode}\n${userCode}`;
 }
diff --git a/cjs/config/loaders/proxyLoader.js b/cjs/config/loaders/proxyLoader.js
index df45c06fc30a00ef1333ac9f94de08df57079a25..b79d8cc4612256d9c8bb509120fd0c20026e7207 100644
--- a/cjs/config/loaders/proxyLoader.js
+++ b/cjs/config/loaders/proxyLoader.js
@@ -53,8 +53,8 @@ async function proxyLoader( userCode) {
   this.addDependency(templatePath);
 
   // Inject the route and the path to the file we're wrapping into the template
-  templateCode = templateCode.replace(/__ROUTE__/g, parameterizedRoute);
-  templateCode = templateCode.replace(/__RESOURCE_PATH__/g, this.resourcePath);
+  templateCode = templateCode.replace(/__ROUTE__/g, parameterizedRoute.replace(/\\/g, '\\\\'));
+  templateCode = templateCode.replace(/__RESOURCE_PATH__/g, this.resourcePath.replace(/\\/g, '\\\\'));
 
   // Run the proxy module code through Rollup, in order to split the `export * from '<wrapped file>'` out into
   // individual exports (which nextjs seems to require).
diff --git a/esm/config/loaders/prefixLoader.js b/esm/config/loaders/prefixLoader.js
index ed41fcfdeec2d92da57133fd6dd9beea1784eae1..afee7bea1e988c1560c88460f27a23a4c6f13931 100644
--- a/esm/config/loaders/prefixLoader.js
+++ b/esm/config/loaders/prefixLoader.js
@@ -14,7 +14,7 @@ function prefixLoader( userCode) {
 
   // Fill in the placeholder
   let templateCode = fs.readFileSync(templatePath).toString();
-  templateCode = templateCode.replace('__DIST_DIR__', distDir);
+  templateCode = templateCode.replace('__DIST_DIR__', distDir.replace(/\\/g, '\\\\'));
 
   return `${templateCode}\n${userCode}`;
 }
diff --git a/esm/config/loaders/proxyLoader.js b/esm/config/loaders/proxyLoader.js
index 2003dc0ba9ee3be5765e0d3f2676b36a859b36e3..ec9726cf59cc7806c25eee0731fab08102ec9b2a 100644
--- a/esm/config/loaders/proxyLoader.js
+++ b/esm/config/loaders/proxyLoader.js
@@ -44,8 +44,8 @@ async function proxyLoader( userCode) {
   this.addDependency(templatePath);
 
   // Inject the route and the path to the file we're wrapping into the template
-  templateCode = templateCode.replace(/__ROUTE__/g, parameterizedRoute);
-  templateCode = templateCode.replace(/__RESOURCE_PATH__/g, this.resourcePath);
+  templateCode = templateCode.replace(/__ROUTE__/g, parameterizedRoute.replace(/\\/g, '\\\\'));
+  templateCode = templateCode.replace(/__RESOURCE_PATH__/g, this.resourcePath.replace(/\\/g, '\\\\'));
 
   // Run the proxy module code through Rollup, in order to split the `export * from '<wrapped file>'` out into
   // individual exports (which nextjs seems to require).
